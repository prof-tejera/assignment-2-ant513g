{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Loading.js","audio/singleBeep.mp3","audio/done.mp3","utils/helpers.js","context/TimerProvider.js","components/generic/Button.js","components/generic/Input.js","utils/containers.js","components/generic/DisplayTime.js","components/generic/DisplayRounds.js","views/DocumentationView.js","components/generic/Panel.js","hooks/hooks.js","components/timers/Stopwatch.js","components/timers/Countdown.js","components/timers/XY.js","components/timers/Tabata.js","views/TimersView.js","App.js","index.js"],"names":["Wrapper","styled","div","Container","Title","RenderComponent","Documentation","table","DocumentComponent","this","props","title","component","propDocs","map","doc","prop","description","type","defaultValue","React","Component","sizeMapping","small","medium","large","Dot","span","size","color","DotGroup","Loading","defaultProps","formatTime","time","seconds","Math","floor","minutes","hours","format","hh","mm","ss","convertToMs","Number","TimerContext","createContext","TimerProvider","children","useSound","singleBeep","play","done","doneStop","initialState","isRunning","rounds","useState","Stopwatch","Countdown","XY","Tabata","active","setActive","setTime","setHH","setMM","setSS","useReducer","state","action","currentRound","Error","setState","count","setCount","laps","setLaps","currentLap","setCurrentLap","sets","setSets","restSS","setRestSS","restMM","setRestMM","value","setValue","totalTime","setTotalTime","roundTime","setRoundTime","restTime","setRestTime","setCurrentRound","resting","setResting","getMs","getRestMs","totalXY","parseInt","hour","totalTimeXY","totalTabata","restSec","restMin","totalTimeTabata","timerDone","countReset","splice","length","Provider","incrementRounds","decrementRounds","fastForward","countUp","countDown","roundDone","ButtonBase","button","ButtonDefault","ButtonSelected","ButtonStart","down","ButtonStop","Button","buttonProps","pressed","ReactDOM","render","document","getElementById","BoxContainer","Select","select","Option","option","Label","label","Input","onChange","name","HTMLfor","FlexBetween","FlexCenter","Display","section","Column","Section","LargeText","LargeLabel","Rounds","Border","li","ul","hr","DisplayTime","Fragment","Li","HR","ListUl","DisplayRounds","useContext","lapTime","index","lapNumber","parseFloat","Background","Panel","useInterval","callback","delay","intervalRef","useRef","callbackRef","useEffect","current","window","setInterval","clearInterval","onClick","e","target","isNaN","Timer","TimersView","GetTimer","activeStopwatch","activeCountdown","activeXY","activeTabata","StyledLi","App","to","path","DocumentationView","StrictMode"],"mappings":"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","file":"static/js/main.3dc6e538.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nclass DocumentComponent extends React.Component {\n  render() {\n    return (\n      <Wrapper>\n        <Title>{this.props.title}</Title>\n        <Container>\n          <RenderComponent>{this.props.component}</RenderComponent>\n          <Documentation>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n            {this.props.propDocs.map((doc) => {\n              return (\n                <tr>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </Documentation>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nclass Loading extends React.Component {\n  render() {\n    const size = sizeMapping[this.props.size];\n    const { color } = this.props;\n\n    return (\n      <Container>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n      </Container>\n    );\n  }\n}\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  size: \"medium\",\n  color: primaryColor,\n};\n\nexport default Loading;\n","export default __webpack_public_path__ + \"static/media/singleBeep.da369034.mp3\";","export default __webpack_public_path__ + \"static/media/done.da946ff5.mp3\";","// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\n\n\nexport function formatTime(time) {\n   \n    let seconds = Math.floor(time % 60 );\n    let minutes = Math.floor((time / 60) % 60);\n    let hours = Math.floor((time/3600));\n   \n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n    if (minutes < 10) {\n        minutes = `0${minutes}`;\n    }\n    if (seconds < 10) {\n        seconds = `0${seconds}`;\n    }\n    return `${hours}:${minutes}:${seconds}`;\n}\n\nexport function format(hh,mm,ss) {\n    \n    let seconds = ss;\n    let minutes = mm;\n    let hours = hh;\n    \n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n    if (minutes < 10) {\n        minutes = `0${minutes}`;\n    }\n    if (seconds < 10) {\n        seconds = `0${seconds}`;\n    }\n    return `${hours}:${minutes}:${seconds}`;\n}\n\nexport default function convertToMs(hh, mm, ss) {\n    let minutes = mm * 60;\n    let hour = hh * 3600;\n    let seconds = ss * 1;\n    let milliseconds = minutes + hour + seconds;\n    return Number(milliseconds);\n}\n\n\nexport function totalTimeXY(hh, mm, ss, rounds) {\n    let seconds = Number(ss * 1);\n    let minutes = Number(mm * 60);\n    let hour = Number(hh * 3600);\n    let time = seconds + minutes + hour;\n    let total = Number(time * rounds);\n    \n    return total;\n}\n\nexport function totalTimeTabata(hh, mm, ss, restMM, restSS, rounds) {\n    let seconds = Number(ss * 1);\n    let minutes = Number(mm * 60);\n    let hour = Number(hh * 3600);\n    let time = seconds + minutes + hour;\n\n    let restSec = Number(restSS * 1);\n    let restMin = Number(restMM * 60);\n    let rest = restSec + restMin;\n    \n    let total = Number((time + rest) * rounds);\n    \n    return total;\n}\n","import React, { useReducer, useState, createContext } from 'react';\nimport useSound from 'use-sound';\nimport singleBeep from '../audio/singleBeep.mp3';\nimport done from '../audio/done.mp3';\nimport convertToMs from '../utils/helpers';\nimport { totalTimeXY, totalTimeTabata } from '../utils/helpers';\n\nexport const TimerContext = createContext({});\n\nconst TimerProvider = ({ children }) => {\n\n    const [play] = useSound(singleBeep);\n    const [doneStop] = useSound(done);\n\n    const initialState = {\n        isRunning: false,\n        time: 0,\n        rounds: 1,\n    };\n\n    function StateReducer(state, action) {\n        switch (action.type) {\n            case 'start':\n                return { ...state, isRunning: true };\n            case 'stop':\n                return { ...state, isRunning: false };\n            case 'reset':\n                return {\n                    isRunning: false,\n                    time: 0,\n                    rounds: 1,\n                };\n            case 'lap': {\n                return { time: state.time + 1 }\n            }\n            case 'fastForward': {\n                if (state.rounds <= 1) {\n                    return { ...state, isRunning: true, rounds: 1 }\n                } else {\n                    return { ...state, isRunning: true, rounds: state.rounds - 1 };\n                }\n            }\n            case 'countUp':\n                return { ...state, time: state.time + 1, currentRound: state.currentRound };\n            case 'countDown':\n                return { ...state, time: state.time - 1, currentRound: state.currentRound };\n            case 'incrementRounds':\n                return { ...state, rounds: state.rounds + 1 };\n            case 'decrementRounds':\n                if (state.rounds <= 1) {\n                    return { ...state, rounds: 1 }\n                } else {\n                    return { ...state, rounds: state.rounds - 1 };\n                }\n            default:\n                throw new Error();\n        }\n    };\n\n\n\n    const [active, setActive] = useState({ Stopwatch: true, Countdown: false, XY: false, Tabata: false });\n    const [time, setTime] = useState(0);\n    const [hh, setHH] = React.useState(0);\n    const [mm, setMM] = React.useState(0);\n    const [ss, setSS] = React.useState(0);\n    const [state, setState] = useReducer(StateReducer, initialState);\n    const [count, setCount] = useState(0);\n    const [laps, setLaps] = useState([]);\n    const [currentLap, setCurrentLap] = useState(0);\n    const [sets, setSets] = useState(0);\n    const [restSS, setRestSS] = useState(0);\n    const [restMM, setRestMM] = useState(0);\n    const [value, setValue] = useState(0);\n    const [totalTime, setTotalTime] = React.useState(0);\n    const [roundTime, setRoundTime] = useState(0);\n    const [restTime, setRestTime] = useState(0);\n    const [currentRound, setCurrentRound] = useState(1);\n    const [resting, setResting] = useState(false);\n   \n    const {\n        isRunning,\n        rounds,\n    } = state;\n    \n  \n    let getMs = Number(convertToMs(hh, mm, ss));\n    let getRestMs = Number(convertToMs(0, mm, ss));\n\n \n    const totalXY = parseInt(totalTimeXY(hh, mm, ss, state.rounds));\n    const totalTabata = parseInt(totalTimeTabata(hh, mm, ss, restMM, restSS, state.rounds));\n\n  \n    function incrementRounds() {\n        setState({ type: 'incrementRounds' });\n    }\n    function decrementRounds() {\n        setState({ type: 'decrementRounds' });\n    }\n\n\n    function countUp() {\n        setTime(time + 1);\n        return time;\n    }\n\n    function countDown() {\n        setTime(time - 1);\n        return Number(time);\n    }\n    \n    function timerDone() {\n        doneStop();\n        countReset();\n    }\n\n    function roundDone() {\n        play();\n    }\n\n   \n    function countReset() {\n        setState({ type: 'reset' });\n        setTime(0);\n        setSS(0);\n        setMM(0);\n        setHH(0);\n        setRestSS(0);\n        setRestMM(0);\n        setCurrentRound(1);\n        setTotalTime(0);\n        laps.splice(0, laps.length + 1);\n   }\n    \n    function fastForward() {\n        if (active.XY) {\n            if (totalTime < 1) {\n                countReset();\n                timerDone();\n                setState({ type: 'stop' });\n            } else {\n                setState({ type: 'fastForward' });\n                setTotalTime(totalTime - roundTime);\n                setTime(roundTime - 1);\n            }\n        } else {\n            if (totalTime < 1) {\n                countReset();\n                timerDone();\n                setState({ type: 'stop' });\n            } else {\n                setState({ type: 'fastForward' });\n                setTotalTime(totalTime - roundTime - restTime);\n                setTime(roundTime - 1);\n                setResting(false);\n            }\n        }\n       \n    }\n    \n   \n\n   \n    \n    return (\n        <TimerContext.Provider\n            value={{\n                active,\n                setActive,\n                count,\n                setCount,\n                initialState,\n                totalXY,\n                totalTabata,\n                laps,\n                setLaps,\n                sets,\n                setSets,\n                rounds,\n                currentRound,\n                setCurrentRound,\n                incrementRounds,\n                decrementRounds,\n                isRunning,\n                state,\n                setState,\n                time,\n                setTime,\n                setTotalTime,\n                totalTime,\n                value,\n                setValue,\n                ss, setSS,\n                mm, setMM,\n                hh,setHH,\n                restSS, setRestSS,\n                restMM, setRestMM,\n                countReset,\n                fastForward,\n                countUp,\n                countDown,\n                timerDone,\n                play,\n                doneStop,\n                roundDone,\n                getMs,\n                getRestMs,\n                roundTime,\n                setRoundTime,\n                restTime,\n                setRestTime,\n                currentLap,\n                setCurrentLap,\n                resting,\n                setResting,\n                \n            }}\n        >\n            \n            {children}\n        </TimerContext.Provider>\n    );\n};\n\nexport default TimerProvider;","import ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport TimerProvider from '../../context/TimerProvider';\n\nconst ButtonBase = styled.button `\n  display: flex;\n  box-sizing: border-box;\n  overflow: auto;\n  vertical-align: middle;\n  text-align: center;\n  margin: auto;\n  border-radius: 8px;\n  width: auto;\n  min-width: 40px;\n  height: 40px;\n  border: none;\n  font-size: 16px;\n  color: white;\n  background-color: #4037C4;\n  box-shadow: inset 2px 2px 5px #5850CE;\n  cursor: pointer;\n  &:hover {\n    background-color: #342D9F;\n    box-shadow: inset 1px 1px 5px #4037C4;\n  }\n  &:active {\n    background-color: #342D9F;\n    font-weight: 600;\n    box-shadow: inset 1px 1px 5px #25253C;\n  }\n`;\n\nconst Container = styled.div `\n    text-align: center;\n    display: flex;\n    padding: 0.5rem;\n    margin: auto;\n    align-content: center;\n    overflow: auto;\n    filter: drop-shadow(2px 2px 3px #333333);\n    cursor: pointer;\n`;\n\nconst ButtonDefault = styled(ButtonBase)`\n  background: #4037C4;\n`;\n\nconst ButtonSelected = styled(ButtonBase)`\n  background-color: #342D9F;\n  box-shadow: inset 1px 1px 5px #4037C4;\n  font-weight: 600;\n  filter: drop-shadow(2px 2px 3px #333333);\n`;\n\nexport const ButtonStart = styled(ButtonBase)`\n  background: #057C48;\n  box-shadow: ${props => (props.down ? 'inset 0 0 5px black' : 'inset 2px 2px 5px #25A76F')};\n  &:hover {\n    background-color: #046239;\n    box-shadow: ${props => (props.down ? 'inset 0 0 5px black' : 'inset 2px 2px 5px #057C48')};\n  }\n  &:active {\n    background-color: #046239;\n    box-shadow: inset 1px 1px 5px #25253C;\n  }\n`;\n\nexport const ButtonStop = styled(ButtonBase)`\n  background: #AD0A0F;\n  box-shadow: ${props => (props.down ? 'inset 0 0 5px black' : 'inset 2px 2px 5px #DD2C32')};\n  &:hover {\n    background-color: #87080C;\n    box-shadow: ${props => (props.down ? 'inset 0 0 5px black' : 'inset 2px 2px 5px #AD0A0F')};\n  }\n  &:active {\n    background-color: #87080C;\n    box-shadow: inset 1px 1px 5px #25253C;\n  }\n`;\n\nconst Button = (props) => {\n  const { children, type, ...buttonProps } = props;\n\n  switch (type) {\n    default:\n      return (\n        <ButtonDefault\n          {...buttonProps}>\n          <Container>\n            {children}\n          </Container> \n        </ButtonDefault>\n      );\n    case 'start':\n      return (\n        <ButtonStart\n          {...buttonProps}>\n          <Container>\n            {children}\n          </Container>\n        </ButtonStart>\n      );\n    case 'stop':\n      return (\n        <ButtonStop\n         {...buttonProps}>\n            <Container>\n              {children}\n            </Container>\n          </ButtonStop>\n      );\n      case 'active':\n        return (\n          <ButtonSelected\n            {...buttonProps}>\n              <Container>\n                {children}\n              </Container>\n            </ButtonSelected>\n        );\n  }\n};\n\nButton.defaultProps = {\n  type: \"default\",\n  pressed: false,\n};\n\nReactDOM.render(\n  <TimerProvider>\n    <Button />\n  </TimerProvider>,\n  document.getElementById('root')\n);\n\nexport default Button;\n\n\n\n\n\n\n\n","import ReactDOM from 'react-dom';\nimport styled from 'styled-components';\n\nconst BoxContainer = styled.div `\n  text-align: center;\n  margin: auto;\n  padding: 1rem;\n  overflow: auto;\n  box-sizing: border-box;\n  border: none;\n  display: block;\n  font-size: 16px;\n  vertical-align: baseline;\n  cursor: pointer; \n`;\n  \nconst Select = styled.select`\n  width: 50px;\n  display: block;\n  font-family: 'Inconsolata', monospace;\n  font-size: 16px;\n  color: #f2f2f2;\n  background-color: #4A4A55;\n  border: none;\n  text-align: center;\n  font-weight: 500;\n  margin: 8px;\n  border-radius: 8px;\n  cursor: pointer; \n`;\n\nconst Option = styled.option`\n&:hover {\n  font-weight: 700;\n  background-color: #4037C4;\n}\n`;\n\nconst Label = styled.label`\n  font-family: 'Courier Prime', monospace;\n  font-size: 16px;\n  color: white;\n  border: none;\n  text-align: center;\n  margin: auto;\n  text-align: center;\n`;\n\n\nexport default function Input(props) {\n\n  const { onChange, value, name } = props;\n  \n  return (\n\n    <BoxContainer>\n      <Label\n        HTMLfor={name}\n        value={value}>\n        {name}\n      </Label>\n      <Select\n        name={name}\n        size=\"5\"\n        onChange={onChange}\n        value={value}\n        >\n          <Option value='0'>0</Option>\n          <Option value='1'>1</Option>\n          <Option value='2'>2</Option>\n          <Option value='3'>3</Option>\n          <Option value='4'>4</Option>\n          <Option value='5'>5</Option>\n          <Option value='6'>6</Option>\n          <Option value='7'>7</Option>\n          <Option value='8'>8</Option>\n          <Option value='9'>9</Option>\n          <Option value='10'>10</Option>\n          <Option value='11'>11</Option>\n          <Option value='12'>12</Option>\n          <Option value='13'>13</Option>\n          <Option value='14'>14</Option>\n          <Option value='15'>15</Option>\n          <Option value='16'>16</Option>\n          <Option value='17'>17</Option>\n          <Option value='18'>18</Option>\n          <Option value='19'>19</Option>\n          <Option value='20'>20</Option>\n          <Option value='21'>21</Option>\n          <Option value='22'>22</Option>\n          <Option value='23'>23</Option>\n          <Option value='24'>24</Option>\n          <Option value='25'>25</Option>\n          <Option value='26'>26</Option>\n          <Option value='27'>27</Option>\n          <Option value='28'>28</Option>\n          <Option value='29'>29</Option>\n          <Option value='30'>30</Option>\n          <Option value='31'>31</Option>\n          <Option value='32'>32</Option>\n          <Option value='33'>33</Option>\n          <Option value='34'>34</Option>\n          <Option value='35'>35</Option>\n          <Option value='36'>36</Option>\n          <Option value='37'>37</Option>\n          <Option value='38'>38</Option>\n          <Option value='39'>39</Option>\n          <Option value='40'>40</Option>\n          <Option value='41'>41</Option>\n          <Option value='42'>42</Option>\n          <Option value='43'>43</Option>\n          <Option value='44'>44</Option>\n          <Option value='45'>45</Option>\n          <Option value='46'>46</Option>\n          <Option value='47'>47</Option>\n          <Option value='48'>48</Option>\n          <Option value='49'>49</Option>\n          <Option value='50'>50</Option>\n          <Option value='51'>51</Option>\n          <Option value='52'>52</Option>\n          <Option value='53'>53</Option>\n          <Option value='54'>54</Option>\n          <Option value='55'>55</Option>\n          <Option value='56'>56</Option>\n          <Option value='57'>57</Option>\n          <Option value='58'>58</Option>\n          <Option value='59'>59</Option>\n        </Select>\n      </ BoxContainer>\n     \n  );\n}\n\nReactDOM.render(\n  <Input />,\n  \n  document.getElementById('root')\n);\n\n","import styled from \"styled-components\";\n\n\nexport const Container = styled.div`\n  display: flex;\n  align-content: center;\n  justify-content: space-evenly;\n  vertical-align: center;\n  margin: 0.5rem;\n  flex-wrap: wrap;\n`;\n\nexport const FlexBetween = styled(Container)`\n  justify-content: space-between;\n  min-width: 80px;\n`;\n\nexport const FlexCenter = styled(Container)`\n  justify-content: center;\n`;\n\nexport const Display = styled.section`\n  box-sizing: border-box;\n  border: none;\n  height: max-content;\n  margin: auto;\n  overflow: auto;\n  width: 100%;\n  text-align: center;\n  background-color: #4A4A55;\n  border-radius: 8px;\n  color: white;\n  box-shadow: inset 0 0 10px #1C1C21;\n  font-family: 'Inconsolata', monospace;\n`;\n\nexport const Column = styled.span`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Section = styled.section`\n  margin: 2.5rem 1rem;\n`;\n\nexport const LargeText = styled.div`\n  font-size: 48px;\n  font-weight: 400;\n  margin: auto 1rem;\n`;\n\nexport const Label = styled.div`\n  display: block;\n  font-size: 16px;\n  text-align: center;\n  vertical-align: middle;\n  font-family: 'Inconsolata', monospace;\n  margin: 0;\n`;\n\nexport const LargeLabel = styled(Label)`\n  font-size: 20px;\n  width: auto;\n  font-family: 'Inconsolata', monospace;\n`;\n\nexport const Rounds = styled.div`\n  font-family: 'Inconsolata', monospace;\n  box-sizing: border-box;\n  overflow: auto;\n  font-size: 24px;\n  font-weight: 400;\n  vertical-align: middle;\n  display: block;\n  text-align: center;\n  margin: 4px auto;\n`;\n\nexport const Li = styled.li`\n  font-size: 18px;\n  font-family: 'Inconsolata', monospace;\n  color: white;\n  display: flex;\n  justify-content: space-between;\n`;\n\n\nexport const ListUl = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n\n\nexport const HR = styled.hr`\n  border: 0;\n  height: 1px;\n  background: #25253C;\n  background-image: linear-gradient(to right, #342D9F, #4037C4, #342D9F);\n`;\n\nexport const Border = styled.div`\n  background: #342D9F;\n  border-radius: 16px;\n  padding: 1.5rem;\n`;\n\n\nexport default Display;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Display from '../../utils/containers';\nimport TimerProvider from '../../context/TimerProvider';\n\n\nexport const DisplayTime = ({children}) => {\n\n  return (\n    <React.Fragment>\n      <Display>\n        {children}\n      </Display>\n    </React.Fragment>\n  );\n}\n\nReactDOM.render(\n  <TimerProvider>\n    <DisplayTime />\n    </TimerProvider>,\n  document.getElementById('root')\n);\n  \nexport default DisplayTime;","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useContext } from 'react';\nimport styled from 'styled-components';\nimport TimerProvider, { TimerContext } from '../../context/TimerProvider';\nimport { formatTime } from '../../utils/helpers';\n\nconst Label = styled.span`\n  font-size: 18px;\n  margin-right: 1rem;\n`;\n\nconst Li = styled.li`\n  font-size: 18px;\n  font-family: 'Inconsolata', monospace;\n  color: white;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst HR = styled.hr`\n  border: 0;\n  height: 1px;\n  background: #25253C;\n  background-image: linear-gradient(to right, #342D9F, #4037C4, #342D9F);\n`;\n\nconst ListUl = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const DisplayContext = createContext();\n\nconst DisplayRounds = () => {\n\n  const {\n    laps,\n  } = useContext(TimerContext);\n\n  \n  \n  return (\n    <>\n      <React.Fragment>\n        <ListUl> {laps.map((lapTime, index) => {\n          const lapNumber = index + 1;\n          return (\n            <>\n              <HR />\n              <Li key={index}>\n                  <Label>Lap {lapNumber}:</Label>\n                <span>{formatTime(parseFloat(lapTime - laps[index - 1] ? laps[index - 1] : 0))}\n                 </span>\n              </Li>\n            </>\n          );})}\n        </ListUl>\n      </React.Fragment>\n    </>\n  );\n};\n\nReactDOM.render(\n  <TimerProvider>\n    <DisplayRounds />\n  </TimerProvider>,\n  document.getElementById('root')\n);\n\nexport default DisplayRounds;","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\nimport Button from \"../components/generic/Button\";\nimport Input from \"../components/generic/Input\";\nimport DisplayTime from \"../components/generic/DisplayTime\";\nimport DisplayRounds from \"../components/generic/DisplayRounds\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  background-color: #h2h2h2;\n`;\n\nconst Background = styled.div`\n color: black;\n background-color: #6760d2;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\nclass Documentation extends React.Component {\n  render() {\n    return (\n      <Container>\n        <div>\n          <Title>Documentation</Title>\n          <DocumentComponent\n            title=\"Loading spinner \"\n            component={<Loading />}\n            propDocs={[\n              {\n                prop: \"size\",\n                description: \"Changes the size of the loading spinner\",\n                type: \"string\",\n                defaultValue: \"medium\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Button\"\n            component={<Button type='default' value='default'>Button</Button>}\n            propDocs={[\n              {\n                prop: \"type\",\n                description: \"Changes the type of button\",\n                type: \"string\",\n                defaultValue: \"default\",\n              },\n              {\n                prop: \"onClick\",\n                description: \"Binds the onClick\",\n                type: \"N/A\",\n                defaultValue: \"N/A\",\n              },\n              {\n                prop: \"onChange\",\n                description: \"Binds the onChange\",\n                type: \"n/a\",\n                defaultValue: \"n/a\",\n              },\n              \n            ]}\n          />\n          <DocumentComponent\n            title=\"Input\"\n            component={<Input />}\n            propDocs={[\n              {\n                prop: \"name\",\n                description: \"Assigns a name\",\n                type: \"string, number, or node\",\n                defaultValue: \"n/a\",\n              },\n              {\n                prop: \"onChange\",\n                description: \"Binds the onChange\",\n                type: \"n/a\",\n                defaultValue: \"n/a\",\n              },\n              \n            ]}\n          />\n          <Background>\n         </Background>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Documentation;\n","import ReactDOM from 'react-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  background: rgb(37,37,60);\n  background: linear-gradient(90deg, rgba(37,37,60,1) 0%, rgba(47,47,55,1) 100%);\n  border-radius: 16px;\n  padding: 2rem 2rem 0.5rem 2rem;\n  display: block;\n  justify-content: space-evenly;\n  overflow: auto;\n  box-sizing: border-box;\n  min-width: 300px;\n  max-width: 500px;\n  box-shadow:  1px 1px 5px #2F2F37;\n  margin: auto;\n`;\n\nconst Panel = (props) => {\n  return <Container>{props.children}</Container>;\n}\n\nReactDOM.render(\n  <Panel />,\n  document.getElementById('root')\n);\n\nexport default Panel;\n\n","import React from 'react';\n\n\n// Hook created by Dan Abramov in https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n// and help from Comment by Danziger https://stackoverflow.com/questions/53024496/state-not-updating-when-using-react-state-hook-within-setinterval\n\nexport function useInterval(callback, delay) {\n  const intervalRef = React.useRef();\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  }, [callback]);\n\n  React.useEffect(() => {\n    if (typeof delay === 'number') {\n      intervalRef.current = window.setInterval(() => callbackRef.current(), delay);\n      return () => window.clearInterval(intervalRef.current);\n    }\n  }, [delay]);\n  \n  return intervalRef;\n}\n\nexport default useInterval;","import React, { useContext } from \"react\";\nimport ReactDOM from 'react-dom';\nimport Panel from '../generic/Panel';\nimport TimerProvider, { TimerContext } from '../../context/TimerProvider';\nimport { Section, Label, FlexBetween, LargeText} from '../../utils/containers';\nimport { formatTime } from \"../../utils/helpers\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport Button from \"../generic/Button\";\nimport DisplayRounds from \"../generic/DisplayRounds\";\nimport useInterval from \"../../hooks/hooks\";\n\n//    Stopwatch\n//    A timer that counts up to X amount of time\n//   (e.g.count up to 2 minutes and 30 seconds, starting at 0)\n\nconst Stopwatch = () => {\n  const {\n    state,\n    setState,\n    laps,\n    setLaps,\n    time,\n    setTime,\n    countUp,\n    countReset\n    } = useContext(TimerContext);\n  \n    \n  \n  useInterval(() => {\n    setTime(countUp);\n    }, state.isRunning ? 1000 : null);\n  \n  return (\n    <React.Fragment>\n      <Panel>\n        <DisplayTime>\n          <Section>\n            <LargeText>{formatTime(time)}</LargeText>\n            <Label>Current Lap: {laps.length + 1}</Label>\n          </Section>\n        </DisplayTime>\n        <Section>\n        <FlexBetween>\n          <Button\n            type={state.isRunning ? 'stop' : 'start'}\n            onClick={() => {\n                setState({\n                  type: state.isRunning ? 'stop' : 'start'\n                })\n              }}>\n            {state.isRunning ? 'Stop' : 'Start'  }\n          </Button>\n          <Button onClick={countReset}>Reset</Button>\n            <Button onClick={() => {\n                if (state.isRunning) {\n                  setLaps([...laps, time]);\n                } }}>Lap</Button>\n        </FlexBetween>\n        </Section>\n        <Section>\n          <DisplayRounds />\n        </Section>\n    </Panel>\n  </React.Fragment>);\n}\n\nReactDOM.render(\n  <TimerProvider>\n    <Stopwatch />\n  </TimerProvider> ,\n\n  document.getElementById('root')\n);\n\nexport default Stopwatch;\n","import React, { useContext, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport Panel from '../generic/Panel';\nimport TimerProvider, { TimerContext } from '../../context/TimerProvider';\nimport { Container, Section, FlexBetween, LargeText } from '../../utils/containers';\nimport { formatTime } from \"../../utils/helpers\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport Button from \"../generic/Button\";\nimport Input from \"../generic/Input\";\nimport { useInterval } from \"../../hooks/hooks\";\n\n//  Countdown\n//  A timer that counts down from X amount of time\n//  (e.g.count down to 0, starting at 2 minutes and 30)\n\nconst Countdown = () => {\n\n  const {\n    time,\n    setTime,\n    state,\n    setState,\n    ss,\n    setSS,\n    mm,\n    setMM,\n    hh,\n    setHH,\n    countDown,\n    getMs,\n    timerDone,\n    countReset,\n  } = useContext(TimerContext);\n \n\n  const intervalRef = useInterval(() => {\n    if (state.isRunning && time !== 0) {\n      setTime(countDown);\n    } else if (time === 0) {\n      timerDone();\n      window.clearInterval(intervalRef.current);\n    } else {\n      window.clearInterval(intervalRef.current);\n    }\n  },  state.isRunning ? 1000 : null );\n\n  useEffect(() => {\n    if (!state.isRunning) {\n      setTime(() => getMs);\n    } \n  }, );\n  \n  return (\n    <Panel>\n      <DisplayTime>\n        <Section>\n          <LargeText>\n            {formatTime(time)}<br />\n         </LargeText>\n         </Section>\n          </DisplayTime>\n      <Container>\n               <Input value={hh} name=\"Hours\" onChange={(e) => setHH(e.target.value)}/>\n              <Input value={mm} name=\"Minutes\" onChange={(e) => setMM(e.target.value)}/>\n              <Input value={ss} name=\"Seconds\" onChange={(e) => setSS(e.target.value)}/>\n      </Container>\n      <Section>\n      <FlexBetween>\n      <Button\n            type={state.isRunning ? 'stop' : 'start'}\n            onClick={() => {\n              setState({ type: state.isRunning ? 'stop' : 'start' })\n            }}>\n          {state.isRunning ? 'Stop' : 'Start'  }\n          </Button>\n\n          <Button\n            onClick={countReset}>Reset\n          </Button>\n            </FlexBetween>\n   </Section>\n    </Panel>\n  );\n}\n\nReactDOM.render(\n  <TimerProvider>\n    \n    <Countdown />\n    </TimerProvider>,\n   \n  document.getElementById('root')\n);\n\nexport default Countdown;","import React, { useContext, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport Panel from '../generic/Panel';\nimport TimerProvider, { TimerContext } from '../../context/TimerProvider';\nimport { Container, FlexCenter,Label, LargeLabel, Section, Column, FlexBetween, Rounds, LargeText} from '../../utils/containers';\nimport { format, formatTime } from \"../../utils/helpers\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport Button from \"../generic/Button\";\nimport Input from \"../generic/Input\";\nimport { useInterval } from \"../../hooks/hooks\";\n\n//    XY\n//    A timer that counts down from X time per round, for Y number of rounds\n//   (e.g. 1 minute for 10 minutes would count down from 1 minute to 0,\n//   then start another countdown, etc, 10 times ) \n\nconst XY = ({children}) => {\n\n  const {\n    time,\n    setTime,\n    ss,\n    setSS,\n    mm,\n    setMM,\n    hh,\n    setHH,\n    totalTime,\n    setTotalTime,\n    rounds,\n    decrementRounds,\n    incrementRounds,\n    setState,\n    state,\n    countDown,\n    timerDone,\n    roundDone,\n    getMs,\n    roundTime,\n    setRoundTime,\n    currentRound,\n    setCurrentRound,\n    countReset,\n    fastForward,\n    totalXY,\n  } = useContext(TimerContext);\n\n  const intervalRef = useInterval(() => {\n    //counting if time is not 0\n    if (state.isRunning && totalTime !== 0) {\n      setTime(countDown);\n      setTotalTime(totalTime - 1);\n      if (time === 0) {\n        // Setting roundTime - 1\n        // Because if it includes the initial round time, it will also count zero as a number,\n        // which will make the round time left in round greater than the total time left\n        setTime(roundTime - 1);\n        roundDone();\n        if (currentRound >= rounds) {\n          setCurrentRound(currentRound);\n        } else {\n          setCurrentRound(currentRound => currentRound + 1);\n        }\n      } \n    } else if (state.isRunning && (totalTime <= 0)) {\n      countReset();\n      timerDone();\n      setState({ type: 'stop' });\n    } else {\n      window.clearInterval(intervalRef.current);\n    }\n  },  state.isRunning ? 1000 : null );\n\n  useEffect(() => {\n    if (!state.isRunning) {\n      setTime(() => getMs);\n      setRoundTime(getMs);\n      setTotalTime(totalXY);\n    } \n    if (isNaN(time)) {\n      setTotalTime(0);\n  }\n  }, );\n\n  return (\n    <React.Fragment>\n      <Panel>\n          <DisplayTime>\n            <Section>\n                  <Label>Total Time Left:</Label>\n                  <Rounds>{formatTime(totalTime)}</Rounds>\n              </Section>\n              <Section>\n              <Label> Time Left in Round:</Label>\n                  <LargeText> {formatTime(time)}</LargeText>\n              </Section>\n              <Section>\n                  <Label>Rounds:</Label>\n            <Rounds>{currentRound}/{state.rounds}</Rounds>\n              </Section>\n          </DisplayTime>\n          <Section>\n              <LargeLabel>Select Rounds:</LargeLabel>\n              <FlexCenter>\n                  <LargeText>{state.rounds}</LargeText>\n                  <Column>\n                      <Button onClick={incrementRounds}>&#9650;</Button>\n                      <Button onClick={decrementRounds}>&#9660;</Button>\n                  </Column>\n              </FlexCenter>\n        </Section>\n        <Section>\n          <LargeLabel>Set Round Time: {format(hh, mm, ss)}</LargeLabel>\n          <Container>\n            <Input value={hh} name=\"Hours\" onChange={(e) => setHH(e.target.value)}/>\n            <Input value={mm} name=\"Minutes\" onChange={(e) => setMM(e.target.value)}/>\n            <Input value={ss} name=\"Seconds\" onChange={(e) => setSS(e.target.value)}/>\n          </Container>\n        </Section>\n          \n    <Section>    \n    <FlexBetween>\n        <Button type={state.isRunning ? 'stop' : 'start'}\n        onClick={() => { setState({ type: state.isRunning ? 'stop' : 'start'}) }}>\n        {state.isRunning ? 'Stop' : 'Start' }</Button>\n        <Button onClick={countReset}>Reset</Button>\n        <Button onClick={fastForward} >Skip</Button>\n  </FlexBetween>\n    </Section>\n    \n\n\n\n\n</Panel>\n</React.Fragment>);\n  }\n  \nReactDOM.render(\n  <TimerProvider>\n    <XY />\n  </TimerProvider>,\n    document.getElementById('root')\n  );\n  \n  export default XY;","import React, { useContext, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport Panel from '../generic/Panel';\nimport TimerProvider, { TimerContext } from '../../context/TimerProvider';\nimport { Container, Label, Section, LargeLabel, FlexBetween, Rounds, LargeText, Border, Column, FlexCenter} from '../../utils/containers';\nimport DisplayTime from \"../generic/DisplayTime\";\nimport Button from \"../generic/Button\";\nimport Input from \"../generic/Input\";\nimport { useInterval } from \"../../hooks/hooks\";\nimport { formatTime, format } from \"../../utils/helpers\";\n\n// TABATA\n//  An interval timer with work / rest periods.\n//  Example: 20s / 10s, 8 rounds, would count down from 20 seconds to 0,\n//  then count down from 10 seconds to 0, then from 20, then from 10, etc, \n//  for 8 rounds. A full round includes both the work and rest.\n//  In this case, 20 + 10=30 seconds per round. \n\n\nconst Tabata = ({children}) => {\n\n  const {\n    time,\n    setTime,\n    ss,\n    setSS,\n    mm,\n    setMM,\n    hh,\n    setHH,\n    resting,\n    setResting,\n    restMM,\n    setRestMM,\n    restSS,\n    setRestSS,\n    totalTime,\n    setTotalTime,\n    rounds,\n    decrementRounds,\n    incrementRounds,\n    setState,\n    state,\n    countDown,\n    timerDone,\n    getMs,\n    getRestMs,\n    roundTime,\n    setRoundTime,\n    restTime,\n    setRestTime,\n    currentRound,\n    setCurrentRound,\n    countReset,\n    fastForward,\n    totalTabata,\n    roundDone,\n  } = useContext(TimerContext);\n\n  const intervalRef = useInterval(() => {\n    //counting if time is not 0\n    if (state.isRunning && totalTime !== 0) {\n      setTime(countDown);\n      setTotalTime(totalTime - 1);\n      if (time === 0 && resting) {\n        // Setting roundTime - 1\n        // Because if it includes the initial round time, it will also count zero as a number,\n        // which will make the round time left in round greater than the total time left\n        setTime(roundTime - 1);\n        setResting(false);\n        roundDone();\n        if (currentRound >= rounds) {\n          setCurrentRound(currentRound);\n        } else {\n          setCurrentRound(currentRound => currentRound + 1);\n        }\n      } else if (time === 0 && !resting) {\n          setTime(restTime - 1);\n          setResting(true);\n          roundDone();\n        } \n    } else if (state.isRunning && (totalTime === 0)) {\n      countReset();\n      timerDone();\n      setState({ type: 'stop' });\n    } else {\n      window.clearInterval(intervalRef.current);\n    }\n  },  state.isRunning ? 1000 : null );\n\n  useEffect(() => {\n    if (!state.isRunning) {\n      setTime(() => getMs);\n      setRoundTime(getMs);\n      setRestTime(getRestMs);\n      setTotalTime(totalTabata);\n    } \n    if (isNaN(time)) {\n      setTotalTime(0);\n  }\n  }, );\n\n\n  return (\n    <React.Fragment>\n      <Panel>\n          <DisplayTime>\n            <Section>\n                  <Label>Total Time Left:</Label>\n                  <Rounds>{formatTime(totalTime)}</Rounds>\n              </Section>\n              <Section>\n              <Label> Time Left in { resting ? 'Rest' : 'Round'}:</Label>\n                  <LargeText> {formatTime(time)}</LargeText>\n              </Section>\n              <Section>\n                  <Label>Rounds:</Label>\n            <Rounds>{currentRound}/{state.rounds}</Rounds>\n              </Section>\n          </DisplayTime>\n          <Section>\n              <LargeLabel>Select Rounds:</LargeLabel>\n              <FlexCenter>\n                  <LargeText>{state.rounds}</LargeText>\n                  <Column>\n                      <Button onClick={incrementRounds}>&#9650;</Button>\n                      <Button onClick={decrementRounds}>&#9660;</Button>\n                  </Column>\n              </FlexCenter>\n        </Section>\n        <Section>\n          <LargeLabel>Set Round Time: {format(hh, mm, ss)}</LargeLabel>\n          <Container>\n              <Input value={hh} name=\"Hours\" onChange={(e) => setHH(e.target.value)}/>\n              <Input value={mm} name=\"Minutes\" onChange={(e) => setMM(e.target.value)}/>\n              <Input value={ss} name=\"Seconds\" onChange={(e) => setSS(e.target.value)}/>\n          </Container>\n        </Section>\n        <Section>\n                 <Border>\n                     <LargeLabel>Set Rest Time: {format(0, restMM, restSS)}</LargeLabel>\n                    <Container>\n              <Input name=\"Minutes\" value={restMM} onChange={(e) => { setRestMM(e.target.value); }} />\n              <Input name=\"Seconds\" value={restSS} onChange={(e) => { setRestSS(e.target.value);  }}/>\n                    </Container>\n                </Border>     \n                </Section>\n          \n    <Section>    \n<FlexBetween>\n<Button\n            type={state.isRunning ? 'stop' : 'start'}\n            onClick={() => { setState({ type: state.isRunning ? 'stop' : 'start'}) }}>\n          {state.isRunning ? 'Stop' : 'Start'  }\n              </Button>\n              \n              <Button onClick={countReset}>Reset</Button>\n              \n            <Button onClick={fastForward} >Skip</Button>\n  </FlexBetween>\n    </Section>\n    \n\n\n\n\n</Panel>\n</React.Fragment>);\n  }\n  \nReactDOM.render(\n  <TimerProvider>\n    <Tabata />\n  </TimerProvider>,\n    document.getElementById('root')\n  );\n  \n  export default Tabata;","import React, { useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport TimerProvider, { TimerContext } from \"../context/TimerProvider\";\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\nimport XY from \"../components/timers/XY\";\nimport Tabata from \"../components/timers/Tabata\";\nimport { useHistory } from \"react-router\";\nimport Button from \"../components/generic/Button\";\nimport { Container } from \"../utils/containers\";\n\nconst Timer = styled.div`\n  padding: 20px;\n  margin: 10px;\n  font-size: 1.3rem;\n  text-align: center;\n`;\n\n\nconst TimersView = (props) => {\n  \n  const {\n    active,\n    setActive,\n    countReset,\n  } = useContext(TimerContext);\n\n  function clickStopwatch() {\n    setActive({ Stopwatch: true, Countdown: false, XY: false, Tabata: false });\n    countReset();\n  }\n\n  function  clickCountdown() {\n    setActive({ Stopwatch: false, Countdown: true, XY: false, Tabata: false });\n    countReset();\n  }\n\n  function  clickXY() {\n    setActive({ Stopwatch: false, Countdown: false, XY: true, Tabata: false });\n    countReset();\n    }\n\n  function  clickTabata() {\n    setActive({ Stopwatch: false, Countdown: false, XY: false, Tabata: true });\n    countReset();\n  }\n\n  function GetTimer() {\n    const activeStopwatch = active.Stopwatch;\n    const activeCountdown = active.Countdown;\n    const activeXY = active.XY;\n    const activeTabata = active.Tabata;\n    if (activeStopwatch) {\n      return (\n        <>\n          <h1>Stopwatch</h1>\n          <Stopwatch></Stopwatch>\n        </>\n      );\n    } else if (activeCountdown) {\n      return (\n        <>\n          <h1>Countdown</h1>\n          <Countdown></Countdown>\n        </>\n      );\n    } else if (activeXY) {\n      return (\n        <>\n          <h1>XY</h1>\n          <XY></XY>\n        </>\n      );\n    } else if (activeTabata) {\n      return (\n        <>\n          <h1>Tabata</h1>\n          <Tabata> </Tabata>\n        </>);\n    }\n  }\n  return (\n    <React.Fragment>\n      <div>\n        \n        <Container>\n          <Button\n            type={active.Stopwatch ? 'active' : 'default'}\n            onClick={clickStopwatch}>Stopwatch</Button>\n          <Button\n            type={active.Countdown ? 'active' : 'default'}\n            onClick={clickCountdown}>Countdown</Button>\n          <Button\n            type={active.XY ? 'active' : 'default'}\n            onClick={clickXY}>XY</Button>\n          <Button\n            type={active.Tabata ? 'active': 'default'}\n            onClick={clickTabata}>Tabata</Button>\n        </Container>\n        <Timer>\n          <GetTimer active={active} />\n        </Timer>\n        </div>\n        \n</React.Fragment>\n    );\n}\n\nexport default () => {\n  return (\n    <TimerProvider>\n    <TimersView />\n  </TimerProvider>\n  );\n};\n\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\n\nconst Container = styled.div`\n  background-image: linear-gradient(to right, #5850CE, #4037C4, #342D9F);\n  height: 100vh;\n  overflow: auto;\n  color: white;\n  font-family: 'Inconsolata', monospace;\n`;\n\nconst StyledLi = styled.li`\n  color: white;\n  font-family: 'Inconsolata', monospace;\n  font-size: 30px;\n`;\n\n\nfunction App() {\n  return (\n    \n    <Container>\n      <Router>\n        <nav>\n          <ul>\n            <StyledLi >\n              <Link to=\"/\">Timers</Link>\n            </StyledLi >\n            <StyledLi >\n             <Link to=\"/docs\">Documentation</Link>\n            </StyledLi >\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/docs\">\n          <DocumentationView />\n          </Route>\n          <Route path=\"/\">\n          <TimersView/>\n          </Route>\n        </Switch>\n      </Router>\n      </Container>\n      \n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}